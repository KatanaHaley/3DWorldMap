"use strict";
/*
 * Copyright (C) 2020-2021 HERE Europe B.V.
 * Licensed under Apache 2.0, see full license in LICENSE
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.setDisplacementMapToMaterial = exports.hasDisplacementFeature = void 0;
/**
 * Determines whether a given material supports displacement maps for elevation overlay.
 * @param material - The material to check.
 * @returns Whether the given material supports displacement maps for elevation overlay.
 */
function hasDisplacementFeature(material) {
    return "displacementMap" in material;
}
exports.hasDisplacementFeature = hasDisplacementFeature;
/**
 * Sets the displacement map to the given material.
 * @param displacementMap - Texture representing the elevation data used to overlay the object.
 * @param material - The Material to be updated.
 */
function setDisplacementMapToMaterial(displacementMap, material) {
    if (hasDisplacementFeature(material) && material.displacementMap !== displacementMap) {
        material.displacementMap = displacementMap;
        material.needsUpdate = true;
        if (material.displacementMap !== null) {
            material.displacementMap.needsUpdate = true;
        }
    }
}
exports.setDisplacementMapToMaterial = setDisplacementMapToMaterial;
//# sourceMappingURL=DisplacementFeature.js.map
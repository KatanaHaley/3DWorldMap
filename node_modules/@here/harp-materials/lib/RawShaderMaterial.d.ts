import * as THREE from "three";
/**
 * [[RawShaderMaterial]] parameters.
 */
export interface RendererMaterialParameters {
    rendererCapabilities: THREE.WebGLCapabilities;
}
export interface RawShaderMaterialParameters extends RendererMaterialParameters, THREE.ShaderMaterialParameters {
}
/**
 * Base class for all raw shader materials. Ensures WebGL2 compatibility for WebGL1 shaders.
 */
export declare class RawShaderMaterial extends THREE.RawShaderMaterial {
    /**
     * The constructor of `RawShaderMaterial`.
     *
     * @param params - `RawShaderMaterial` parameters.  Always required except when cloning
     * another material.
     */
    constructor(params?: RawShaderMaterialParameters);
    invalidateFog(): void;
    /**
     * To set the material's opacity property value and also update the opacity value of the uniforms if needed.
     * @param opacity If undefined, the value is not set
     */
    setOpacity(opacity?: number): void;
}
//# sourceMappingURL=RawShaderMaterial.d.ts.map
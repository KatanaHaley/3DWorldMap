import * as THREE from "three";
import { RawShaderMaterial, RendererMaterialParameters } from "./RawShaderMaterial";
/**
 * Parameters used when constructing a new {@link HighPrecisionPointMaterial}.
 */
export interface CirclePointsMaterialParameters extends THREE.ShaderMaterialParameters, RendererMaterialParameters {
    /**
     * Point size.
     */
    size?: number;
    /**
     * Point color.
     */
    color?: THREE.Color;
}
/**
 * Material designed to render circle points. Note that it is always transparent since the circle
 * shape is created with an alpha channel to benefit an antialising that a mere `discard` could
 * not bring.
 */
export declare class CirclePointsMaterial extends RawShaderMaterial {
    static readonly DEFAULT_CIRCLE_SIZE = 1;
    /**
     * Constructs a new `CirclePointsMaterial`.
     *
     * @param parameters - The constructor's parameters. Always required except when cloning another
     */
    constructor(parameters?: CirclePointsMaterialParameters);
    /**
     * Gets the circle screen size.
     */
    get size(): number;
    /**
     * Sets the circle screen size.
     */
    set size(size: number);
    get color(): THREE.Color;
    set color(value: THREE.Color);
}
//# sourceMappingURL=CirclePointsMaterial.d.ts.map
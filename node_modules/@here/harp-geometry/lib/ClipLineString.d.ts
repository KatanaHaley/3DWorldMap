import { GeoCoordinates } from "@here/harp-geoutils";
import { Vector2 } from "three";
/**
 * Clip the input line against the given bounds.
 *
 * @param lineString - The line to clip.
 * @param minX - The minimum x coordinate.
 * @param minY - The minimum y coordinate.
 * @param maxX - The maxumum x coordinate.
 * @param maxY - The maxumum y coordinate.
 */
export declare function clipLineString(lineString: Vector2[], minX: number, minY: number, maxX: number, maxY: number): Vector2[][];
/**
 * The result of wrapping a line string.
 */
interface WrappedLineString {
    left: GeoCoordinates[][];
    middle: GeoCoordinates[][];
    right: GeoCoordinates[][];
}
/**
 * Wrap the given line string.
 *
 * @remarks
 * This function splits this input line string in three parts.
 *
 * The `left` member of the result contains the part of the line string with longitude less than `-180`.
 *
 * The `middle` member contains the part of the line string with longitude in the range `[-180, 180]`.
 *
 * The `right` member contains the part of the line string with longitude greater than `180`.
 *
 * @param coordinates The coordinates of the line string to wrap.
 */
export declare function wrapLineString(coordinates: GeoCoordinates[]): Partial<WrappedLineString>;
export {};
//# sourceMappingURL=ClipLineString.d.ts.map